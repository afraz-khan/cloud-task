AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Terraform x Cloudformation.
  
  This template fetches the outputs of an internal cross-site 
  terraform state file saved on an S3 Bucket. Template uses a
  custom lambda-backed resource to perform this task & exports
  the outputs for cloudformation based infrastructure.

Parameters:
  S3BucketName:
    Type: String
    Description: Name of the bucket having terraform state file.
  
  TFStateFileS3Key:
    Type: String
    Description: |
      S3 Key of the terraform state file in relation to above bucket.
      DON'T USE "/" at the start of the key.

Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: "S3 Settings"
        Parameters: 
          - S3BucketName
          - TFStateFileS3Key

Resources:
  tfStateExportLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Execution Role for terraform state export lambda.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - 'sts:AssumeRole'
      Path: "/"
      RoleName: terraform-state-export-role
      Tags: 
        - Key: Domain
          Value: tfState-export
      Policies:
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - logs:CreateLogGroup
              Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
            - Effect: Allow
              Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
              Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group/aws/lambda/terraform-state-export-lambda"
            - Effect: Allow
              Action:
              - s3:GetObject
              Resource:
              - !Sub "arn:aws:s3:::${S3BucketName}/${TFStateFileS3Key}"

  tfStateExportLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: terraform-state-export-lambda
      Description: |
        This function fetches terraform state file from given S3 
        bucket & exports the required outputs.
      Handler: index.handler
      Role: !GetAtt tfStateExportLambdaExecutionRole.Arn
      Code:
        ZipFile: >
          const S3 = require('aws-sdk/clients/s3');
          const response = require('cfn-response');
          
          exports.handler = (event, context) => {
            const s3Client = new S3({region: 'us-east-1'});

            console.log(event);
            
            if (event.RequestType == "Delete") {
              response.send(event, context, "SUCCESS");
              return;
            }
            
            let desiredOutputs;
            if(event.ResourceProperties && event.ResourceProperties.DesiredOutputs){
              desiredOutputs = event.ResourceProperties.DesiredOutputs;
            }

            const bucketParams = {
              Bucket: process.env.S3_BUCKET,
              Key: process.env.OBJECT_KEY
            };
            
            s3Client.getObject(bucketParams, (err, data) => {
              if(err){
                response.send(event, context, 'FAILED', {Error: "Invoke call failed"});
                return;
              }

              let outputs = Object.entries(JSON.parse(data.Body.toString()).outputs);
              outputs = outputs.map(([key, val]) => ({[key]: val.value}));
              
              if(desiredOutputs && desiredOutputs.length > 0){
                outputs = outputs.filter(element  => {
                  const key = Object.keys(element)[0];
                  return desiredOutputs.indexOf(key) > -1;
                })
              }
            
              const responseData = Object.assign({}, ...outputs);
              response.send(event, context, 'SUCCESS', responseData);
            });
          }
      Runtime: nodejs14.x
      Environment:
        Variables:
          S3_BUCKET: !Ref S3BucketName
          OBJECT_KEY: !Ref TFStateFileS3Key

  tfStateOutputsExport:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt tfStateExportLambdaFunction.Arn
      DesiredOutputs: #this property containes all of the output names in form of a list which you want to export from terraform state file. 
      - alb-dns-name
      - instance_id2

# create outputs here that you want to export
Outputs:
  ALBUrl:
    Value: !GetAtt tfStateOutputsExport.alb-dns-name
    Description: This output exports the DNS of the ALB created through terraform.
    Export: 
      Name: Main-ALB

  InstanceId2:
    Value: !GetAtt tfStateOutputsExport.instance_id2
    Description: This output exports the id of second Instance created through terraform.
    Export: 
      Name: Instance-Id2